- name: configure postgres
  copy: src=pg_hba.conf
        dest=/etc/postgresql/9.3/main/pg_hba.conf
  register: postgres_conf

- name: restart postgres
  when: postgres_conf.changed
  service: name=postgresql state=restarted

- name: create postgres user
  sudo_user: postgres
  postgresql_user: 
          name={{postgres_user}} 
          password={{postgres_password}}
          role_attr_flags=SUPERUSER
          
- name: configure smart-on-fhir service
  template: src=smart-on-fhir.conf.j2
            dest=/etc/init/smart-on-fhir.conf
            owner=root group=root mode=0644
  register: sof_service

- name: checkout smart-on-fhir
  sudo_user: "{{username}}"
  git: repo={{fhir_server_repo}}
       version={{fhir_server_branch}}
       dest={{install_dir}}/smart-on-fhir
  register: sof_checkout

- name: stop smart-on-fhir
  when: sof_checkout.changed
  service: name=smart-on-fhir state=stopped
  
- name: build smart-on-fhir server
  sudo_user: "{{username}}"
  environment:
    JAVA_HOME: "{{java_home_dir}}"
  when: sof_checkout.changed
  shell: chdir={{install_dir}}/smart-on-fhir
        ./grailsw dev war

- name: drop postgres db
  sudo_user: postgres
  when: sof_checkout.changed and (not fhir_server_preserve_db)
  postgresql_db: state=absent name=fhir
          
- name: create postgres db
  sudo_user: postgres
  when: sof_checkout.changed
  postgresql_db: name=fhir owner={{postgres_user}}

- name: restart smart-on-fhir
  when: sof_checkout.changed or sof_service.changed
  service: name=smart-on-fhir state=restarted
 
- name: wait for smart-on-fhir server to become available
  wait_for: port=3000
  
- name: generate self-signed ssl certificate (fhir server)
  when: fhir_server_secure_http and not use_custom_ssl_certificates
  shell: creates=/etc/nginx/ssl/fhir.crt
         echo -e "{{fhir_server_ssl_country}}\n{{fhir_server_ssl_province}}\n{{fhir_server_ssl_locality}}\n{{fhir_server_ssl_organization}}\n{{fhir_server_ssl_division}}\n{{fhir_server_host}}\n{{fhir_server_ssl_email}}\n" | openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/fhir.key -out /etc/nginx/ssl/fhir.crt

- name: generate self-signed ssl certificate (apps server)
  when: app_server_secure_http and not use_custom_ssl_certificates
  shell: creates=/etc/nginx/ssl/app.crt
         echo -e "{{app_server_ssl_country}}\n{{app_server_ssl_province}}\n{{app_server_ssl_locality}}\n{{app_server_ssl_organization}}\n{{app_server_ssl_division}}\n{{app_server_host}}\n{{app_server_ssl_email}}\n" | openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/app.key -out /etc/nginx/ssl/app.crt

- name: configure nginx (fhir-starter apps)
  tags: [apps,nginx]
  template: src=nginx_apps.j2 dest=/etc/nginx/sites-enabled/apps owner=root group=root mode=0644
  notify:
        - restart nginx
   
- name: configure nginx (smart-on-fhir server)
  tags: [apps,nginx]
  template: src=nginx_default.j2 dest=/etc/nginx/sites-enabled/default owner=root group=root mode=0644
  notify:
        - restart nginx

- meta: flush_handlers
