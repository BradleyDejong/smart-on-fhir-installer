- name: Add PPA repos
  apt_repository: repo={{item}}
  with_items: ['ppa:webupd8team/java','ppa:nginx/stable']

- name: Update apt Cache 
  apt: update_cache=yes
  
- name: Upgrade the Server
  apt: upgrade=full
  
- name: Automatically select the OpenLDAP Configuration settings
  shell: echo "slapd {{item}}" | sudo debconf-set-selections
  with_items:
         - slapd/password1 password {{ldap_server.admin_password}}
         - slapd/password2 password {{ldap_server.admin_password}}
         - slapd/allow_ldap_v2 boolean false
         - shared/organization string {{ldap_server.organization}}
         - slapd/no_configuration boolean false
         - slapd/move_old_database boolean true
         - slapd/purge_database boolean true
         - slapd/domain string {{ldap_server.domain}}
         - slapd/backend boolean HDB
  
- name: Install APT Packages (git, nginx, slapd, ldap-utils, postgresql, python-psycopg2)
  environment:
    DEBIAN_FRONTEND: noninteractive
  apt: pkg={{item}}
  with_items:
         - git
         - nginx
         - slapd
         - ldap-utils
         - postgresql
         - python-psycopg2

- name: nginx config
  template: src=nginx_default.j2 dest=/etc/nginx/sites-enabled/default owner=root group=root mode=0644

- name: fhir upstart config
  template: src=smart-on-fhir.conf.j2 dest=/etc/init/smart-on-fhir.conf owner=root group=root mode=0644

- name: restart nginx
  service: name=nginx state=restarted

- name: postgres config
  copy: src=pg_hba.conf
        dest=/etc/postgresql/9.3/main/pg_hba.conf

- name: create postgres user
  sudo_user: postgres
  postgresql_user: 
          name={{postgres.user}} 
          password={{postgres.password}}
          role_attr_flags=SUPERUSER

- name: create postgres db
  sudo_user: postgres
  postgresql_db: name=fhir owner={{postgres.user}}

- name: restart postgres
  service: name=postgresql state=restarted

- name: checkout smart-on-fhir 
  git: repo=https://github.com/jmandel/smart-on-fhir.git
       dest=/opt/smart-on-fhir

- name: Automatically select the Oracle License
  shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections

- name: Install Oracle Java
  apt: pkg=oracle-java7-installer

- name: set global JAVA_HOME
  lineinfile: dest=/etc/environment
              state=present
              regexp='^JAVA_HOME'
              line='JAVA_HOME=/usr/lib/jvm/java-7-oracle'

- name: build grails war
  environment:
    JAVA_HOME: /usr/lib/jvm/java-7-oracle
  shell: chdir=/opt/smart-on-fhir
        ./grailsw dev war
 
- name: install postgres tables
  environment:
    JAVA_HOME: /usr/lib/jvm/java-7-oracle
  shell: chdir=/opt/smart-on-fhir
        ./grailsw -DnoTomcat=true run-script scripts/CreateDatabase.groovy
 
- name: get jetty-runner
  get_url: 
          url=http://repo1.maven.org/maven2/org/eclipse/jetty/jetty-runner/9.1.4.v20140401/jetty-runner-9.1.4.v20140401.jar
          dest=/opt/jetty-runner.jar

- name: restart smart-on-fhir
  service: name=smart-on-fhir state=started
