- name: build smart-on-fhir server
  environment:
    JAVA_HOME: "{{java_home_dir}}"
  shell: chdir={{install_dir}}/smart-on-fhir
        ./grailsw dev war

- name: drop postgres db
  sudo_user: postgres
  postgresql_db: state=absent name=fhir
          
- name: create postgres db
  sudo_user: postgres
  postgresql_db: name=fhir owner={{postgres.user}}

- name: install smart-on-fhir tables
  environment:
    JAVA_HOME: "{{java_home_dir}}"
  shell: chdir={{install_dir}}/smart-on-fhir
        ./grailsw -DnoTomcat=true run-script scripts/CreateDatabase.groovy
        
- name: build OpenID Connect server
  environment:
    JAVA_HOME: "{{java_home_dir}}"
  shell: chdir={{install_dir}}/ldap-openid-connect-server
       mvn package

- name: load sample LDAP directory
  shell: chdir={{install_dir}}
        ldapadd -x -D cn=admin,{{ldap_server.base}} -w {{ldap_server.admin_password}} -f ldap_content.ldif

- name: restart postgres
  service: name=postgresql state=restarted
  
- name: restart smart-on-fhir
  service: name=smart-on-fhir state=restarted
  
- name: restart OpenID Connect server
  service: name=oidc state=restarted
  
- name: restart nginx
  service: name=nginx state=restarted
  
- name: build sample patients
  shell: chdir={{install_dir}}/smart_sample_patients/bin
         python generate.py --write-fhir ../generated-data

- name: wait for smart-on-fhir server to become available
  wait_for: port=3000 delay=10
         
- name: load sample patients
  shell: chdir={{install_dir}}/smart_sample_patients/generated-data
         /vagrant/load-patients.sh